<?php

namespace AGIL\ForumBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AgilForumSubjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AgilForumSubjectRepository extends EntityRepository
{

    /**
     * Retourne les derniers sujets de forum par ordre de dernière réponse
     *
     * @param int $page
     * @param int $maxperpage
     * @param $idCategory
     * @return Paginator
     */
    public function getLastSubjectsByAnswer($page=1, $maxperpage=15,$idCategory){

        $datesMax = $this->_em->createQueryBuilder();
        $query = $this->_em->createQueryBuilder();


        $datesMax->select('MAX(answ.forumAnswerPostDate)')
              ->from('AGIL\ForumBundle\Entity\AgilForumAnswer','answ')
              ->groupBy('answ.subject')
        ;

        $query->select('sub.forumSubjectId','sub.forumSubjectTitle','sub.forumSubjectIsResolved',
            'sub.forumSubjectDescription','ans.forumAnswerPostDate','ans.forumAnswerId',
            'ans','us.username','sub.forumSubjectPostDate')
            ->from('AGIL\ForumBundle\Entity\AgilForumAnswer','ans')
            ->leftJoin('ans.subject','sub')
            ->leftJoin('sub.user','us')
            ->where('sub.category = ?1')
            ->andWhere($query->expr()->In('ans.forumAnswerPostDate', $datesMax->getDQL()))
            ->orderBy('ans.forumAnswerPostDate','desc')
        ;

        $query->setParameter(1,$idCategory);

        $query->setFirstResult(($page-1) * $maxperpage)
            ->setMaxResults($maxperpage)->getQuery();

        return new Paginator($query);;

    }

    /**
     * Permet d'obtenir le nombre de sujets dans une catégorie
     *
     * @param $idCategory
     * @return mixed
     */
    public function getCountSubjects($idCategory){

        $query = $this->_em->createQueryBuilder();

        $query->select('COUNT(sub.forumSubjectId) as cnt')
            ->from('AGIL\ForumBundle\Entity\AgilForumSubject','sub')
            ->where('sub.category = ?1')
        ;

        $query->setParameter(1,$idCategory);

        return $query->getQuery()->getSingleScalarResult();

    }

    /**
     * Permet d'obtenir le nombre de réponses dans un sujet
     *
     * @param $idSubject
     * @return mixed
     */
    public function getCountAnswersInSubject($idSubject){

        $query = $this->_em->createQueryBuilder();

        $query->select('COUNT(ans.forumAnswerId) as cnt')
            ->from('AGIL\ForumBundle\Entity\AgilForumAnswer','ans')
            ->where('ans.subject = ?1')
        ;

        $query->setParameter(1,$idSubject);

        return $query->getQuery()->getSingleScalarResult();

    }



}
